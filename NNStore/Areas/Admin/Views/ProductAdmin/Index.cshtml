@using PagedList.Mvc;
@using PagedList;
@model PagedList.IPagedList<NNStore.Context.Product>
<style>
    .pagination {
        display: inline-block;
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;
    }

        .pagination > li {
            display: inline;
        }

            .pagination > li > a,
            .pagination > li > span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.428571429;
                text-decoration: none;
                background-color: #ffffff;
                border: 1px solid #dddddd;
            }

            .pagination > li:first-child > a,
            .pagination > li:first-child > span {
                margin-left: 0;
                border-bottom-left-radius: 4px;
                border-top-left-radius: 4px;
            }

            .pagination > li:last-child > a,
            .pagination > li:last-child > span {
                border-top-right-radius: 4px;
                border-bottom-right-radius: 4px;
            }

            .pagination > li > a:hover,
            .pagination > li > span:hover,
            .pagination > li > a:focus,
            .pagination > li > span:focus {
                background-color: #eeeeee;
            }

        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus {
            z-index: 2;
            color: #ffffff;
            cursor: default;
            background-color: #428bca;
            border-color: #428bca;
        }

        .pagination > .disabled > span,
        .pagination > .disabled > a,
        .pagination > .disabled > a:hover,
        .pagination > .disabled > a:focus {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
            border-color: #dddddd;
        }

    .pagination-lg > li > a,
    .pagination-lg > li > span {
        padding: 10px 16px;
        font-size: 10px;
    }

    .pagination-lg > li:first-child > a,
    .pagination-lg > li:first-child > span {
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
    }

    .pagination-lg > li:last-child > a,
    .pagination-lg > li:last-child > span {
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
    }

    .pagination-sm > li > a,
    .pagination-sm > li > span {
        padding: 5px 10px;
        font-size: 12px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
    }

    .pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
    }

    .pager {
        padding-left: 0;
        margin: 20px 0;
        text-align: center;
        list-style: none;
    }

        .pager:before,
        .pager:after {
            display: table;
            content: " ";
        }

        .pager:after {
            clear: both;
        }

        .pager:before,
        .pager:after {
            display: table;
            content: " ";
        }

        .pager:after {
            clear: both;
        }

        .pager li {
            display: inline;
        }

            .pager li > a,
            .pager li > span {
                display: inline-block;
                padding: 5px 14px;
                background-color: #ffffff;
                border: 1px solid #dddddd;
                border-radius: 15px;
            }

                .pager li > a:hover,
                .pager li > a:focus {
                    text-decoration: none;
                    background-color: #eeeeee;
                }

        .pager .next > a,
        .pager .next > span {
            float: left;
        }

        .pager .disabled > a,
        .pager .disabled > a:hover,
        .pager .disabled > a:focus,
        .pager .disabled > span {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
        }
</style>


@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<p>
    @Html.ActionLink("Thêm mới", "Create")
</p>

<section class="section-content padding-y">
    <div class="card mx-auto" style="max-width:5500px; margin-left:50px;">
        <article class="card-body">
            <div class="content-wrapper">
                <header class="mb-4"><h4 class="text-danger">Trang quản lý sản phẩm</h4></header>
                <div class="form-group">

                    @using (Html.BeginForm("Index", "ProductAdmin" +
                        "", FormMethod.Get))
                    {
                        <p>
                            Tìm tên sản phẩm:@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                            <input type="submit" value="Tìm kiếm" />
                        </p>
                    }
                    <div class="col-md-offset-2 col-md-10">

                        @Html.ActionLink("Thêm", "Create")
                    </div>
                </div>
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Img)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().CategoryId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().ShortDes)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().PriceSale)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().TypeId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Slug)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().BrandId)
                        </th>

                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                <img id="Avatar" class="hide" src="~/Content/img/Product/@item.Img" width="107" height="98" alt="" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoryId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ShortDes)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.TypeId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Slug)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BrandId)
                            </td>

                            <td>
                                <button style="width:100px"> @Html.ActionLink("Sửa", "Edit", new { id = item.Id })</button>   <br />
                                <button style="width:100px"> @Html.ActionLink("Chi tiết", "Details", new { id = item.Id })</button>    <br />
                                <button style="width:100px"> @Html.ActionLink("Xoá", "Delete", new { id = item.Id })</button>



                            </td>
                        </tr>
                    }

                </table>
                <div class="center-block>
                    @(Model.PageCount<Model.PageNumber?0 : Model.PageNumber)of @Model.PageCount
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
                </div>

            </div>
        </article>
    </div>
</section>